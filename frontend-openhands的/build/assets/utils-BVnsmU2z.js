import{t as f}from"./bundle-mjs-0JNfDbnS.js";function l(t){var e,r,n="";if(typeof t=="string"||typeof t=="number")n+=t;else if(typeof t=="object")if(Array.isArray(t)){var s=t.length;for(e=0;e<s;e++)t[e]&&(r=l(t[e]))&&(n&&(n+=" "),n+=r)}else for(r in t)t[r]&&(n&&(n+=" "),n+=r);return n}function b(){for(var t,e,r=0,n="",s=arguments.length;r<s;r++)(t=arguments[r])&&(e=l(t))&&(n&&(n+=" "),n+=e);return n}const u=t=>t.trim().replace(/https?:\/\//,"").replace(/github.com\//,"").replace(/\.git$/,"").toLowerCase();function m(...t){return f(b(t))}const $=(t,e)=>{const r=parseFloat(t.style.height||"");return Number.isFinite(r)?r:e},w=(t,e)=>{t.style.setProperty("height",`${e}px`)},y=()=>/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||"ontouchstart"in window||navigator.maxTouchPoints>0,R=t=>t.split(".").pop()?.toUpperCase()||"FILE",P=(t,e)=>{if(!t)return!1;switch(t){case"bitbucket":return!0;case"gitlab":return!1;case"github":return e==="saas";default:return!1}},a=t=>{switch(t){case"github":return"https://github.com";case"gitlab":return"https://gitlab.com";case"bitbucket":return"https://bitbucket.org";default:return""}},c=t=>t==="gitlab"?"GitLab":t==="bitbucket"?"Bitbucket":"GitHub",i=t=>t?"merge request":"pull request",h=t=>t?"MR":"PR",O=(t,e,r)=>{const n=a(e);switch(e){case"github":return`${n}/${r}/pull/${t}`;case"gitlab":return`${n}/${r}/-/merge_requests/${t}`;case"bitbucket":return`${n}/${r}/pull-requests/${t}`;default:return""}},M=(t,e,r)=>{const n=a(t);switch(t){case"github":return`${n}/${e}/blob/main/${r}`;case"gitlab":return`${n}/${e}/-/blob/main/${r}`;case"bitbucket":return`${n}/${e}/src/main/${r}`;default:return""}},C=(t,e)=>{const[r,n]=t?.full_name?.split("/")||[],s=e?.path||"";return{owner:r,repo:n,filePath:s}},x=(t,e)=>`${a(t)}/${e}`,N=(t,e,r)=>{const n=a(t);switch(t){case"github":return`${n}/${e}/tree/${r}`;case"gitlab":return`${n}/${e}/-/tree/${r}`;case"bitbucket":return`${n}/${e}/src/${r}`;default:return""}},k=()=>"Please pull the latest code from the repository.",S=t=>{const e=c(t),r=i(t==="gitlab");return`Please push the changes to a remote branch on ${e}, but do NOT create a ${r}. Check your current branch name first - if it's main, master, deploy, or another common default branch name, create a new branch with a descriptive name related to your changes. Otherwise, use the exact SAME branch name as the one you are currently on.`},I=t=>{const e=c(t),r=i(t==="gitlab"),n=h(t==="gitlab");return`Please push the changes to ${e} and open a ${r}. If you're on a default branch (e.g., main, master, deploy), create a new branch with a descriptive name otherwise use the current branch. If a ${r} template exists in the repository, please follow it when creating the ${n} description.`},U=()=>"Please create a new branch with a descriptive name related to the work you plan to do.";function A(t){return t?t.flatMap(e=>e.tasks).length:0}function g(t,e){const r=[];let n=0;for(const s of t){if(n>=e)break;const p=e-n,o=s.tasks.slice(0,p);o.length>0&&(r.push({...s,tasks:o}),n+=o.length)}return r}function G(t,e){return!t||t.length===0?[]:e?t:g(t,3)}const v=(t,e)=>{const r=c(t),n=i(t==="gitlab"),s=h(t==="gitlab");return`Please explore this repository. Create the file .openhands/microagents/repo.md with:
            ${e?`- ${e}`:`- A description of the project
            - An overview of the file structure
            - Any information on how to run tests or other relevant commands
            - Any other information that would be helpful to a brand new developer
        Keep it short--just a few paragraphs will do.`}

Please push the changes to your branch on ${r} and create a ${n}. Please create a meaningful branch name that describes the changes. If a ${n} template exists in the repository, please follow it when creating the ${s} description.`},E=t=>{switch(t){case"STOPPED":return"COMMON$STOPPED";case"RUNNING":return"COMMON$RUNNING";case"STARTING":return"COMMON$STARTING";case"ERROR":return"COMMON$ERROR";case"ARCHIVED":return"COMMON$ARCHIVED";default:return"COMMON$UNKNOWN"}},T=t=>{switch(t){case"todo":return"⏳";case"in_progress":return"🔄";case"done":return"✅";default:return"❓"}},H=t=>t==="done"?"bg-green-800 text-green-200":t==="in_progress"?"bg-yellow-800 text-yellow-200":"bg-gray-700 text-gray-300",B=(t,e)=>{if(!e.trim())return!0;const r=u(e);return u(t.full_name).includes(r)},_=t=>t==="gitlab"?"openhands-config":".openhands",D=(t,e)=>e==="gitlab"?t.full_name.endsWith("/openhands-config"):t.full_name.endsWith("/.openhands");export{v as A,h as B,i as C,A as a,E as b,m as c,$ as d,R as e,k as f,G as g,S as h,y as i,I as j,U as k,x as l,N as m,T as n,H as o,b as p,P as q,D as r,w as s,B as t,_ as u,u as v,O as w,c as x,M as y,C as z};
